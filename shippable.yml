# PLEASE NOTE: Travis is not currently utilised by the Moodle core integration
# process (which uses our internal CI system) this file is here for the benefit
# of community developers git clones - see MDL-51458.

sudo: false

# We currently disable Travis notifications entirely until https://github.com/travis-ci/travis-ci/issues/4976
# is fixed.
notifications:
  email: false

language: php

php:
    # Moodle supports versions 5.4, 5.5, and 5.6 of PHP.
    # Order by fastest to slowest.
    # We currently only run the highest and lowest versions to reduce the load on travis-ci.org.
    - 5.6
    # - 5.5
    - 5.4

env:
    # Although we want to run these jobs and see failures as quickly as possible, we also want to get the slowest job to
    # start first so that the total run time is not too high.
    #
    # We only run MySQL on PHP 5.6, so run that first.
    # CI Tests should be second-highest in priority as these only take <= 60 seconds to run under normal circumstances.
    # Postgres is significantly is pretty reasonable in its run-time.

    # Run unit tests on MySQL
    - DB=mysqli   PHPUNIT=true    INSTALL=true   CITEST=true

before_install:
    - composer self-update;
    
install:
    # Set the encrypted GITHUB_TOKEN if it's available to raise the API limit.
    - if [ -n "$GITHUB_APITOKEN" ]; then composer config github-oauth.github.com $GITHUB_APITOKEN; fi

    # Install composer dependencies.
    # We need --no-interaction in case we hit API limits for composer. This causes it to fall back to a standard clone.
    # Typically it should be able to use the Composer cache if any other job has already completed before we started here.
    - travis_retry composer install --prefer-dist --no-interaction

before_script:
  - composer self-update
  - composer install
  - cp config-dist.php config.php
  - echo "pwd: `pwd`"
  - mkdir -p /var/www/moodledata
  - mkdir -p /var/www/phpunit_moodledata
  - sed -i 's%// \($CFG->phpunit_\)%\1%' config.php
  - sed -i "s%http://example.com/moodle%http://localhost%" config.php
  - sed -i "s%/home/example/moodledata%/var/www/moodledata%" config.php
  - sed -i "s%/home/example/phpu_moodledata%/var/www/phpunit_moodledata%" config.php
      
      
script:
    ########################################################################
    # PHPUnit
    ########################################################################
    - >
      if [ "$PHPUNIT" = 'true' ];
      then
        vendor/bin/phpunit --colors --debug  --coverage-text;
      fi
    ########################################################################
    # CI Tests
    ########################################################################
    - >
      if [ "$CITEST" = 'true' ];
      then
        # Note - this is deliberately placed in the script section as we
        # should not add any code until after phpunit has run.
        # The following repositories are required.
        # The local_ci repository does the actual checking.
        git clone https://github.com/moodlehq/moodle-local_ci.git local/ci
        # We need the official upstream for comparison
        git remote add upstream https://github.com/moodle/moodle.git;
        git fetch upstream master;
        export GIT_PREVIOUS_COMMIT="`git merge-base FETCH_HEAD $TRAVIS_COMMIT`";
        export GIT_COMMIT="$TRAVIS_COMMIT";
        export UPSTREAM_FETCH_HEAD=`git rev-parse FETCH_HEAD`
        # Variables required by our linter.
        export gitcmd=`which git`;
        export gitdir="$TRAVIS_BUILD_DIR";
        export phpcmd=`which php`;
      fi
    - >
      if [ "$CITEST" = "true" -a "$GIT_PREVIOUS_COMMIT" != "$UPSTREAM_FETCH_HEAD" ];
      then
        # This is a CI test, but it is based on an older weekly release.
        # Warn in a way that will fail the test.
        echo "Current commit is based on an older weekly release" && false;
      fi
    # Actually run the CI Tests - do this outside of the main test to make output clearer.
    - >
      if [ "$CITEST" = 'true' ];
      then
        bash local/ci/php_lint/php_lint.sh;
      fi
